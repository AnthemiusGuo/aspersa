#!/usr/bin/env bash
# This program is part of Aspersa (http://code.google.com/p/aspersa/)

# ########################################################################
# A script to watch MySQL and run the 'collect' program when some condition
# becomes true.  By default, it watches for a too-many-connections condition.
# This is a good script to run in a screen session.  It's separate from the
# 'collect' script because that lets you change 'collect' without stopping
# and restarting this one.
#
# The name 'stalk' is because 'watch' is already taken, and 'stalk' is fun.
#
# Author: Baron Schwartz
# ########################################################################

# ########################################################################
# Configuration settings.
# ########################################################################
# This is the max number of <whatever> we want to tolerate.  You can pass this
# in as the first command-line option if you want.
THRESHOLD=${1:-100}
# This is the interval between checks; pass it as the 2nd command-line option.
INTERVAL=${2:-30}
# This is the thing to check for.  You can pass this as the third option.
VARIABLE=${3:-Threads_connected}
# If the command you're running to detect the condition is allowed to return
# nothing (e.g. a grep line that might not even exist if there's no problem),
# then set this to "yes".
MAYBE_EMPTY="no"
# This is the location of the 'collect' script.
COLLECT="${HOME}/bin/collect";
# This is where to store the collected data.
DEST="${HOME}/collected/"
# Collect GDB stacktraces?
GDB="no"
# Collect oprofile data?
OPC="yes"
# Collect strace data?
STRACE="no"
# How long to sleep after collecting?
SLEEP=600
# Send mail to this list of addresses when the script triggers.
EMAIL=""
# Bail out if the disk is more than this %full.
PCT_THRESHOLD=95
# Bail out if the disk has less than this many MB free.
MB_THRESHOLD=100
# Any options to pass to mysql/mysqladmin, such as -u, -p, etc
MYSQLOPTIONS=""
# ########################################################################
# End configuration
# ########################################################################

# ########################################################################
# Echo to STDERR and exit false.
# ########################################################################
die() {
   echo "${1}" >&2
   exit 1
}

# ########################################################################
# Echo to STDERR and possibly email.
# ########################################################################
log() {
   if [ "${EMAIL}" ]; then
      echo "${1} on $(hostname)" | mail -s "${2} on $(hostname)" ${EMAIL}
   fi
   echo "${1}" >&2
}

# Make the collection location
mkdir -p "${DEST}" || die "Can't make the destination directory"
test -d "${DEST}"  || die "${DEST} isn't a directory"
test -w "${DEST}"  || die "${DEST} isn't writable"

# Test if we have root; warn if not, but it isn't critical.
if [ "$(id -u)" != "0" ]; then
   echo 'Not running with root privileges!';
fi

while true; do
   date 

   # XXX This is where we decide whether to execute 'collect'.
   # XXX Customize this if needed.  The idea is to generate a number and store
   # XXX it into $detected, and if $detected > $THRESHOLD, then we'll execute
   # XXX the collection process.
   detected=$(mysqladmin ext | grep ${VARIABLE} | awk '{print $4}');
   execute="no"
   if [ -z "${detected}" -a ${MAYBE_EMPTY} = "no" ]; then
      execute="yes" # Oops, couldn't connect, maybe max_connections problem.
      echo "The detected value is empty; something failed?  Exit status is $?"
   elif [ "${detected:-0}" -gt ${THRESHOLD} ]; then
      execute="yes"
   fi

   # XXX Stop customizing here; everything above should be what you need.

   # Make sure the disk isn't getting too full.
   avail=$(df -m -P "${DEST}" | awk '/^\//{print $4}');
   full=$(df -m -P "${DEST}" | awk '/^\//{print $5}' | sed -e 's/%//g');
   if [ "${avail}" -le "${MB_THRESHOLD}" -o "${full}" -ge "${PCT_THRESHOLD}" ]; then
      NOTE="Exiting, not enough free space (${full}%, ${avail}MB free)"
      log "${NOTE}" "Disk too full"
      exit 1
   fi

   if [ "${execute:-no}" = "yes" ]; then 
      NOTE="Executing collection script; ${VARIABLE} = ${detected}"
      log "${NOTE}" "${COLLECT} triggered"
      ${COLLECT} -d "${DEST}" -i "${INTERVAL}" -g "${GDB}" -o "${OPC}" -s "${STRACE}" ${MYSQLOPTIONS}
      echo "sleeping ${SLEEP} seconds to avoid DOS attack"
      sleep ${SLEEP}
   else
      sleep ${INTERVAL}
   fi
done
