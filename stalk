#!/bin/bash
# This program is part of Aspersa (http://code.google.com/p/aspersa/)

# ########################################################################
# A script to watch MySQL and run the 'collect' program when some condition
# becomes true.  By default, it watches for a too-many-connections condition.
# This is a good script to run in a screen session.  It's separate from the
# 'collect' script because that lets you change 'collect' without stopping
# and restarting this one.
#
# The name 'stalk' is because 'watch' is already taken, and 'stalk' is fun.
#
# Author: Baron Schwartz
# ########################################################################

# ########################################################################
# Configuration settings.
# ########################################################################
# This is the max number of <whatever> we want to tolerate.  You can pass this
# in as the first command-line option if you want.
THRESHOLD=${1:-100}
# This is the interval between checks; pass it as the 2nd command-line option.
INTERVAL=${2:-30}
# This is the thing to check for.  You can pass this as the third option.
VARIABLE=${3:-Threads_connected}
# This is the location of the 'collect' script.
COLLECT="${HOME}/bin/collect";
# How long to sleep after collecting?
SLEEP=600

if [ "$(id -u)" != "0" ]; then
   echo 'Not running with root privileges!';
fi

while true; do
   date 
   threshold=""
   # If you want to, you can replace this with a custom command.
   threshold=$(mysqladmin ext | grep ${VARIABLE} | awk '{print $4}');
   execute=no
   if [ -z "${threshold}" ]; then
      execute="yes" # Oops, couldn't connect, maybe max_connections problem.
   elif [ ${threshold} -gt ${THRESHOLD} ]; then
      execute="yes"
   fi
   if [ "${execute}" = "yes" ]; then 
      echo "Executing collection script; ${VARIABLE} = ${threshold}"
      ${COLLECT}
      echo "sleeping ${SLEEP} seconds to avoid DOS attack"
      sleep ${SLEEP}
   else
      sleep ${INTERVAL}
   fi
done
